<hr/>
<%= form_with(model: answer, local: true) do |form| %>
<% if answer.errors.any? %>
  <div id="error_explanation">
    <h2><%= pluralize(answer.errors.count, "error") %>
      prohibited this answer from being saved:</h2>

    <ul>
      <% answer.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
    </ul>
  </div>
<% end %>

<% @question = Call.find(params[:id]) %>
<div class="form" style="max-width: 650px">
  <div class="field">
    <%= form.label :question %>
    <%= form.text_field :question, value: @question.title, class: 'form-control boxed' %>
  </div>

  <div class="field">
    <%= form.label :answer %>
    <%= form.text_area :answer, class: 'form-control boxed', rows: '8' %>
  </div>

  <div class="form-group input-group">
    <%= form.label :file, class: "btn btn-secondary btn-file input-group-btn" %>
    <%= form.file_field :file, class: 'form-control-file', multiple: true, onchange: 'validateFiles(this)', data: {max_file_size: 2.megabytes}, style:"display: none"%>
    <%= form.text_field :file_text, class:"form-control", readonly: true %>
  </div>

  <div class="field" style="display: none">
    <%= form.label :category_id %>
    <%= form.text_field :category_id, value: @question.category.id %>
  </div>
  <%= hidden_field_tag :question_id, @question.id %>

  <div class="field" style="display: none">
    <%= form.label :user_id %>
    <%= form.text_field :user_id, value: current_user.id %>
  </div>

  <div class="form-check form-check-inline">
    <%= form.check_box :faq, class: "form-check-input" %>
    <%= form.label :faq, value: 'Add to FAQ?', class: 'form-check-label' %>
  </div>
  <br/><br/>

  <div class="actions">
    <%= form.submit 'Done', class: 'btn btn-primary' %>
  </div>
</div>
<% end %>

<script>
  function validateFiles(inputFile) {

    var size = 0;
    var maxFileSize = $(inputFile).data('max-file-size');

    $.each(inputFile.files, function () {
      if (this.size) {
        size += this.size;
      }
    });

    console.log(size)
    if (size && maxFileSize && size > parseInt(maxFileSize)) {
      const animation = {
        "in": "bounceIn",
        "out": "fadeOutUpBig"
      };
      const heart = "/assets/icons/heart-7b7db7682d22d7e720bd648d44141160ecebc8dace0e3d9f2effd12a41c7f6a9.png";
      Notification.create("<%= 'Warning' %>", '<%= "This file exceeds the maximum allowed file size (2 MB)" %>', heart, animation, 2, 5);
      $(inputFile).val('');
    };
  }

  $(function () {

    // We can attach the `fileselect` event to all file inputs on the page
    $(document).on('change', ':file', function () {
      var input = $(this),
        numFiles = input.get(0).files
          ? input.get(0).files.length
          : 1,
        label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
      input.trigger('fileselect', [numFiles, label]);
    });

    // We can watch for our custom `fileselect` event like this
    $(document).ready(function () {
      $(':file').on('fileselect', function (event, numFiles, label) {

        var input = $(this).parents('.input-group').find(':text'),
          log = numFiles > 1
            ? numFiles + ' files selected'
            : label;

        if (input.length) {
          input.val(log);
        } else {
          if (log)
            alert(log);
          }

      });
    });

  });
</script>
