<hr/>
<%= tinymce language: 'pt_BR' %>
<div class="required_info"></div><br/>
<%= form_with(model: answer, local: true, :html => { id: "finalAnswerForm" }) do |form| %>
<% if answer.errors.any? %>
  <div id="error_explanation">
    <h2><%= pluralize(answer.errors.count, "error") %>
      prohibited this answer from being saved:</h2>
    <ul>
      <% answer.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
    </ul>
  </div>
<% end %>


  <div class="form" style="max-width: 650px">
    <div class="field">
      <%= form.label :question, 'Questão', class: 'required' %>
      <%= form.text_field :question, value: @call.title, class: 'form-control boxed', required: true %>
    </div>

    <div class="field">
      <%= form.label :answer, 'Resposta', class: 'required' %>
      <%= form.text_area :answer, id: 'tinymceAnswer', rows: '8'%>
    </div>

    <div class="form-group">
      <%= form.label :files, 'Arquivos (selecione todos os arquivos necessários pressionando a tecla CTRL)' %>
      <%= form.text_field :files, id:'uuid-files-answer', style: 'display: none'%>
      <div id="answer-dropzone" class="future-dropzone">
        <div class="dz-default dz-message">
          Arraste arquivos aqui para adicioná-los
        </div>
      </div>
    </div>

    <div class="field">
      <%= form.label :keywords, 'Palavras-chave (separadas por vírgula ou ponto-e-vírgula)' %>
      <%= form.text_field :keywords, 'data-role': 'tagsinput', placeholder: ' ' %>
    </div>

    <div class="field" style="display: none">
      <%= form.label :category_id, 'Categoria' %>
      <%= form.text_field :category_id, value: @call.category.id, required: true %>
    </div>

    <div class="field" style="display: none">
      <%= form.label :user_id, 'Usuário', class: 'required' %>
      <%= form.text_field :user_id, value: current_user.id, required: true %>
    </div>

    <div class="field" style="display: none">
      <%= form.label :system_id, 'Sistema Origem', class: 'required' %>
      <%= form.text_field :system_id, value: Answer.systems[:from_call], required: true %>
    </div>

    <div id='faq-form' class="form-check form-check-inline">
      <%= form.check_box :faq, class: "form-check-input" %>
      <%= form.label :faq, 'Adicionar ao FAQ?', class: 'form-check-label' %>
    </div>


    <%= hidden_field_tag :call_id, @call.id, required: true %>
    <%= hidden_field_tag :reply_id, @reply.id %>
    <%= hidden_field_tag :reply_attachments, '' %>
    <br/><br/>

    <div class="actions">
      <%= form.submit 'Criar resposta', class: 'btn btn-primary btn-sm' %>
      <%= submit_tag("Cancelar", { :name => 'reset', :id => 'reset', :type => 'reset', :class => 'btn btn-danger btn-sm'}) %>
    </div>
  </div>
<% end %>

<script>
  let answerFileIds = [];
  let dropAnswer;
  $(document).ready(function () {

    // Adds the actual class, to prevent errors
    document.querySelectorAll('.future-dropzone').forEach(d => d.classList.add('dropzone'));

      // grap our upload form by its id
    dropAnswer = $('#answer-dropzone').dropzone({
        url: '/attachments',

        // restrict image size to a maximum 20MB
        maxFilesize: 20,

        // restrict to the maximum of 3 files
        maxFiles: 3,

        // Translations
        dictCancelUpload: 'Cancelar Upload',
        dictCancelUploadConfirmation: 'Deseja mesmo cancelar o Upload?',
        dictRemoveFile: 'Remover arquivo',
        dictDefaultMessage: 'Arraste arquivos aqui para adicioná-los',
        dictFallbackMessage: 'Esse browser não suporta o anexo de arquivos.',
        dictFileTooBig: 'Tamanho dos anexos excedido',
        dictInvalidFileType: 'Extensão de arquivo Inválida',
        dictMaxFilesExceeded: 'Quantidade de arquivos excedida',

        // show remove links on each image upload
        addRemoveLinks: true,

        // if the upload was successful
        success: (file, response) => {
            // find the remove button link of the uploaded file and give it an id
            // based of the attachmentID response from the server
            $(file.previewTemplate).find('.dz-remove').attr('id', response.attachmentID);

            // Add to array
            answerFileIds.push(response.attachmentID);
            $('#uuid-files-answer').val(answerFileIds);

            // add the dz-success class (the green tick sign)
            $(file.previewElement).addClass("dz-success");

        },
        //when the remove button is clicked
        removedfile: file => {

            // grap the id of the uploaded file we set earlier
            let id = $(file.previewTemplate).find('.dz-remove').attr('id');

            // Remove from array
            answerFileIds = answerFileIds.filter(uuid => uuid != id)
            $('#uuid-files-answer').val(answerFileIds);

            // make a DELETE ajax request to delete the file
            $.ajax({
                type: 'DELETE',
                url: '/attachments/' + id,
                success: () => $(file.previewTemplate).fadeOut(),
                error: e => console.error(e)
            });
        }
    });
  });
</script>
