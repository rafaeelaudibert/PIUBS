<%= form_tag({:class => 'form-inline'}) do %>
<div class="input-group">
  <input type="search" name="search_field" id="search_field" value="" class="form-control boxed faq" style="margin-right: 0.5rem">
  <label for="search_field">
    &nbsp;<i class="fa fa-search"></i>
    &nbsp;Pesquisar por uma resposta no FAQ
  </label>
  <input type="button" name="commit" value="Pesquisar" id="search_button" class="btn btn-primary" data-disable-with="Search">
  <br/>

</div>

<div id="table" class="m-2" style="max-height: 600px; overflow-y: scroll; padding: 5px"></div>

<script>

  function searchQuery() {
    const arr = $("#search_field").val().match(/\S+/g);

    if (arr && arr.length >= 1) {
      jQuery.ajax({
        url: '/answers/query_call/' + textField.value,
        type: "GET",
        dataType: "json",
        success: data => {
          if (data.length > 0) {
            let parsedHTML = "";

            //Add the data rows.
            for (let entry of data) {
              const header = '<div class="card card-default"><div class="card-header"><div class="header-block">';
              const title = '<p class="title"><em class="fa fa-question-circle mr-2"></em> <strong>' + entry.question + '</strong></p></div></div>';
              const content = '<div class="card-block"><p>' + entry.answer + '</p>';
              const view = '<a href="/answers/' + entry.id + '"class="btn btn-primary btn-sm right" target="_blank"> <em class="fa fa-eye"></em> Mostrar</a></div></div>';
              parsedHTML += header + title + content + view;
            }

            tableDiv.innerHTML = parsedHTML;
          } else {
            tableDiv.innerHTML = "Não há questões no FAQ sobre essa pergunta"
          }
        }
      })
    } else {
      tableDiv.innerHTML = "Você precisa fazer uma pesquisa com no mínimo 4 letras";
    }
  }

  function triggerSearch(e) {
    {
      const str = $("#search_field").val();

      if (e.which == 13) { // Enter
        e.preventDefault();
      }
      else if (e.which == 8 && str == '') { // Backspace com string vazia
        tableDiv.innerHTML = "";
      }

      if (str.length % 4 == 0) { // Query
        searchQuery();
      }

      clearTimeout(timeout);
      timeout = setTimeout(() => searchQuery(), 300);
    }
  }

  const tableDiv = document.getElementById('table');
  const textField = document.getElementById('search_field');
  let timeout;

  $("#search_field").keyup(triggerSearch);
  $('#search_button').click(triggerSearch);

  const faq_click = button => {
    const answer = button.parentNode.parentNode.children[2].innerHTML;
    const id = button.parentNode.parentNode.children[0].innerHTML;

    $.ajax({
      url: `/answers/${id}/attachments`,
      type: "GET",
      dataType: "json",
      success: data => {
        const dropzone = $('#reply-dropzone')[0].dropzone
        tinyMCE.get('tinymce').setContent(`${answer}<br/><br>Essa resposta foi retirada do FAQ. Ela estava disponível <a href="/answers/${id}" target='_blank'>aqui</a></b>`);

        // Fake their adittion in the reply-dropzone
        dropzone.removeAllFiles();
        data.forEach( val => {
          const mockFile = {
                    name: val.filename,
                    size: val.bytes,
                    type: val.type,
                    accepted: true            // required if using 'MaxFiles' option
                };

          dropzone.files.push(mockFile);
          dropzone.emit('addedfile', mockFile);
          dropzone.emit('complete', mockFile);
          $(dropzone.files[dropzone.files.length - 1]
                                          .previewElement).find('.dz-remove').attr('id', val.id);
        })

        // Set the ids
        replyFileIds = data.map(val => val.id).reduce((acc, val) => acc.concat(val), [])
        $('#uuid-files-reply').val(replyFileIds);

        // Updates the divs
        $("#reply_box").show(200);
        $("#faq_box").hide(200);
        $("#on-faq").prop('checked', true);
      }
    });
  }

  $('document').ready(function () {

    $('#search_field').on('focusout', function () {
      changeState($(this));
    });

    function changeState(form) {
      if (form.val().length > 0) {
        form.addClass('has-value');
      } else {
        form.removeClass('has-value');
      }
    }

    const questionTitle = "<%= @call.title.split('.')[0] %>";
    textField.value = questionTitle;
    $('#search_button').trigger('click');
    $('#search_field').trigger('focusout');
  });

</script>
<% end %>
