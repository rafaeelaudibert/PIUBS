<%= content_for :body_title do%>
  <div class="left">
    <div class="display-5" style="float:left;">Usuários</div>
  </div>
  <div class="right create-new">
    <%= link_to 'Convidar novo usuário', new_user_invitation_path, class: 'btn btn-primary btn-lg' %>
  </div>
<% end %>

  <%= render 'filters' %>

  <hr class="under-header" style="margin-top: <%= params[:filterrific] ? '15em' : '11em'%>"/>


  <div id="filterrific_results">
    <% if @users.length > 0 %>
      <table class="table table-bordered table-striped table-hover table-users">
        <thead class="thead-dark">
          <tr>
            <th>Nome</th>
            <th>E-mail</th>
            <% if current_user.try(:admin?) %>
              <th>Perfil</th>
            <% end %>
            <th>Último login</th>
            <th>Status</th>
            <th colspan="2"></th>
          </tr>
        </thead>
          <tbody>
            <% @users.each do |user| %>
              <tr>
                <%= render user %>
              </tr>
            <% end %>
          </tbody>
      </table>
    <% else %>
      <h3> Não existem usuários com os filtros selecionados </h3>
    <% end %>

  </div>

  <script>

    $('document').ready(function () {

      const parseQuery = () => {
        const queryString = decodeURIComponent((window.location.href+'').replace(/\+/g, '%20'));
        const query = {};
        const pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&');
        for (let piece of pairs) {
            const pair = piece.split('=');
            query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');
        }

        return query;
      }

      const stateSelect = document.getElementById('filterrific_with_state');
      const citySelect = document.getElementById('filterrific_with_city');
      const triggeredByState = () => jQuery.ajax({url: `/apoioaempresas/cities/states/${stateSelect.value}`,
                                                  type: "GET",
                                                  dataType: "json",
                                                  success: insertCitiesData})

      stateSelect.addEventListener('change', triggeredByState);

      function insertCitiesData(cities) {
        let queried_city = parseQuery()['filterrific[with_city]']
        let innerHTML = '<option value>Todas Cidades</option>';
        for (let city of cities) {
          innerHTML += `<option ${queried_city == city.id ? 'selected="selected"' : ''} value=${city.id}>
                          ${city.name}
                        </option>`
        }
        citySelect.innerHTML = innerHTML;
      }

      triggeredByState();

      $('#filterrific_search_query').on('focusout', function () {
        changeState($(this));
      });

      function changeState(form) {
        if (form.val().length > 0) {
          form.addClass('has-value');
        } else {
          form.removeClass('has-value');
        }
      }

      $('.filterrific').on('change', () => {
        $('#mostrar-filter').click();
      })

    });
  </script>
