<%= form_with(model: controversy, local: true) do |form| %>
  <% if controversy.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(controversy.errors.count, "error") %> prohibited this controversy from being saved:</h2>

      <ul>
      <% controversy.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :title, class: 'required' %>
    <%= form.text_field :title, required: true %>
  </div>

  <div class="field">
    <%= form.label :description, class: 'required' %>
    <%= form.text_field :description, required: true %>
  </div>

  <% if company_user?  %>

    <div class="field">
      <%= form.hidden_field :sei, value: current_user.sei, required: true %>
    </div>

    <div class="field">
      <%= form.label :city_id, class: 'required' %>
      <%= form.number_field :city_id, required: true %>
    </div>

    <div class="field">
      <%= form.label :cnes %>
      <%= form.number_field :cnes %>
    </div>
  <% elsif ubs_user? %>

    <div class="field">
      <%= form.hidden_field :city_id, value: current_user.city_id, required: true %>
      <%= form.hidden_field :cnes, value: current_user.cnes, required: true %>
    </div>

    <div class="field">
      <%= form.label :sei, class: 'required' %>
      <%= form.number_field :sei, required: true %>
    </div>
  <% elsif city_user? %>

    <div class="field">
      <%= form.hidden_field :city_id, value: current_user.city_id, required: true %>
    </div>

    <div class="field">
      <%= form.label :sei, class: 'required' %>
      <%= form.number_field :sei, required: true %>
    </div>
  <% elsif admin? || support_user? %>
    <div class="field">
      <%= form.label :sei, class: 'required' %>
      <%= form.select :sei, Company.all.map(&:sei), required: true, prompt: 'Selecione uma empresa' %>
    </div>

    <div class="field">
      <%= form.label :state_id, class: 'required' %>
      <%= form.select :state_id, State.all.map(&:name), required: true, prompt: 'Selecione um estado' %>
    </div>

    <div class="field">
      <%= form.label :city_id, class: 'required' %>
      <%= form.select :city_id, City.all.sample(30).map { |city| [city.name, city.id] }, required: true, prompt: 'Selecione uma cidade' %>
    </div>

    <div class="field">
      <%= form.label :cnes %>
      <%= form.select :cnes, Unity.all.sample(30).map { |unity| [unity.name, unity.cnes] }, prompt: 'Selecione uma UBS (OPCIONAL)' %>
    </div>

    <div class="field">
      <%= form.label :creator, class: 'required' %>
      <%= form.select :creator, %w[company unity city].map { |creator| [creator.titleize, creator] }, required: true, prompt: 'Selecione o tipo de criador' %>
    </div>

    <div class="field">
      <%= form.label :user_creator, class: 'required' %>
      <%= form.select :user_creator, [], required: true, prompt: 'Selecione os campos acima primeiro' %>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :category, class: 'required' %>
    <%= form.select :category, Controversy.categories.map { |category| [category[0].titleize, category[0]] }, required: true %>
  </div>

  <div class="form-group">
    <%= form.label :files, 'Arquivos' %>
    <%= form.text_field :files, id:'uuid-files', class: 'hidden'%>
    <div id="dropzone" class="future-dropzone">
      <div class="dz-default dz-message">
        Arraste arquivos aqui para adicioná-los
      </div>
    </div>
  </div>



  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>

<script>

let fileIds = [];

$(document).ready(() => {

  // Adds the actual class, to prevent errors
  document.querySelector('.future-dropzone').classList.add('dropzone');

    // grap our upload form by its id
  $('#dropzone').dropzone({
      url: '/apoioaempresas/attachments',

      // restrict image size to a maximum 20MB
      maxFilesize: 20,

      // restrict to the maximum of 5 files
      maxFiles: 5,

      // Translations
      dictCancelUpload: 'Cancelar Upload',
      dictCancelUploadConfirmation: 'Deseja mesmo cancelar o Upload?',
      dictRemoveFile: 'Remover arquivo',
      dictDefaultMessage: 'Arraste arquivos aqui para adicioná-los',
      dictFallbackMessage: 'Esse browser não suporta o anexo de arquivos.',
      dictFileTooBig: 'Tamanho dos anexos excedido',
      dictInvalidFileType: 'Extensão de arquivo Inválida',
      dictMaxFilesExceeded: 'Quantidade de arquivos excedida',

      // show remove links on each image upload
      addRemoveLinks: true,

      // if the upload was successful
      success: (file, response) => {
          // find the remove button link of the uploaded file and give it an id
          // based of the attachmentID response from the server
          $(file.previewTemplate).find('.dz-remove').attr('id', response.attachmentID);

          // Add to array
          fileIds.push(response.attachmentID);
          $('#uuid-files').val(fileIds);

          // add the dz-success class (the green tick sign)
          $(file.previewElement).addClass("dz-success");

      },
      //when the remove button is clicked
      removedfile: file => {

          // grap the id of the uploaded file we set earlier
          let id = $(file.previewTemplate).find('.dz-remove').attr('id');

          // Remove from array
          fileIds = fileIds.filter(uuid => uuid != id)
          $('#uuid-files').val(fileIds);

          // make a DELETE ajax request to delete the file
          $.ajax({
              type: 'DELETE',
              url: '/apoioaempresas/attachments/' + id,
              success: () => $(file.previewTemplate).fadeOut(),
              error: e => console.error(e)
          });
      }
  });
})


</script>
